{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","props","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAc,SAACS,GACX,MAAM,CAAEP,GAAR,mBAAuBO,OAE3BN,EAAc,KAEdO,QAAQC,IAAI,gBAKhB,SACI,uBACIC,KAAK,OACLC,MAAQX,EACRY,SArBc,SAAET,GACxBF,EAAcE,EAAEU,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,sDAGnBP,QAAQC,IAAIQ,GAHO,SAIAE,MAAOF,GAJP,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXF,IAAG,UAAEA,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCGPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOF,EAAU,EAAVA,IAGrC,OACI,sBAAKM,UAAU,yBAAf,UACI,qBAAKC,IAAMP,EAAMQ,IAAMN,IACvB,kCAAMA,EAAN,WCwBGO,EA3BC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEf,ECLwB,SAAEA,GAE1B,MAA0BhB,mBAAS,CAC/BuB,KAAM,CAAC,GACPa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GACChC,QAAQC,IAAI+B,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAG1B,CAAEpB,IAEEqB,EDb2BK,CAAc1B,GAAlCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACI,qCACA,6BAAMpB,IAEJoB,GAAW,wCAEb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACC,GACR,OAAO,cAAC,EAAD,eAEMA,GADCA,EAAIC,aE2BvBgB,EAxCM,SAAEC,GAKnB,MAAoC5C,mBAAS,CAAC,oBAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAYA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQS,EAAWiB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MC5BlC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5197cc0d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( { setCategories } ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue(e.target.value);\n    }\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories((categories) => {\n                return [inputValue, ...categories]\n            });\n            setInputValue('');\n        } else {\n            console.log('qui a pasao');            \n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async( category ) => {\n        \n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=GH3LRbCj6fURmoVjdMNTD6XBpwzVgs09`;\n    console.log(url);\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            img: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const GifGridItem = ({ id, title, img }) => {\n\n    // console.log( img );\n    return (\n        <div className=\"card animate__bounceIn\">\n            <img src={ img } alt={ title }/>\n            <p> { title } </p>\n        </div>\n    )\n}\n\nGifGridItem.propTypes = {\n\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n// import PropTypes from 'prop-types'\nimport { GifGridItem } from './GifGridItem';\n// import { getGifs } from '../Helpers/getGifs';\n\nconst GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n        <h3>{ category }</h3>\n\n        { loading && <p>Loading</p>}\n\n        <div className='card-grid'>\n            {\n                images.map((img) => {\n                    return <GifGridItem \n                            key={ img.id }\n                            { ...img }/>;\n                })\n            }\n        </div>\n        </>\n    )\n}\n\nGifGrid.propTypes = {\n\n}\n\nexport default GifGrid\n","import { useEffect, useState } from 'react'\nimport { getGifs } from '../Helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [0],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( category )\n            .then( imgs => {\n                    console.log(imgs);\n                    setState({\n                        data: imgs,\n                        loading: false\n                    })\n            })\n    }, [ category ])\n\n    return state; // { data: [], loading: true }\n\n}","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { AddCategory } from './Components/AddCategory';\nimport GifGrid from './Components/GifGrid';\n// import { GifGridItem } from './Components/GifGridItem';\n\n\nconst GifExpertApp = ( props ) => {\n\n\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n\n    const [categories, setCategories] = useState(['game of thrones']);\n\n\n    // const handleAdd = () => {\n    //     setCategories((categories) => {\n    //         return [...categories, 'James Rodriguez'];\n    //     })\n    // }\n\n    // console.log(categories);\n\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />\n            <ol>\n                { \n                    categories.map( category => (\n                        <GifGrid \n                            key={ category }\n                            category={ category }/>\n                    ))\n                }\n            </ol>\n\n        </>\n    )\n}\n\n// GifExpertApp.propTypes = {\n\n// }\n\nexport default GifExpertApp\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}